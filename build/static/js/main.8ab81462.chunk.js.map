{"version":3,"sources":["components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["TodoListItem","state","label","changeLabel","e","_this","setState","target","value","editSubmit","preventDefault","props","onChangeTask","_this$props","this","onDeleted","onToggleImportant","onToggleDone","done","important","onEdit","isEdit","classNames","isEditBlock","react_default","a","createElement","onSubmit","type","onChange","ref","isLabelBlock","className","onClick","Component","TodoList","todos","elements","map","item","id","itemProps","Object","objectWithoutProperties","key","components_todo_list_item","assign","AppHeader","_ref","toDo","SearchPanel","term","onSearchChange","placeholder","ItemStatusFilter","buttons","name","filter","onFilterChange","clazz","concat","ItemAddForm","onLabelChange","onItemAdded","App","maxId","todoData","createTodoItem","addItem","text","newItem","toConsumableArray","deleteItem","_ref2","idx","findIndex","el","slice","toggleProperty","arr","propName","oldItem","objectSpread","defineProperty","_ref3","_ref4","search","items","length","toLowerCase","indexOf","_ref5","_ref6","_this$state","visibleItem","doneCount","todoCount","components_app_header","components_search_panel","item_status_filter","components_todo_list","components_item_add_form","ReactDOM","render","components_app","document","querySelector"],"mappings":"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","file":"static/js/main.8ab81462.chunk.js","sourcesContent":["import TodoListItem from './todo-list-item';\r\n\r\nexport default TodoListItem;","import React, { Component } from 'react';\r\nimport './todo-list-item.css';\r\n\r\n\r\nexport default class TodoListItem extends Component {\r\n\r\n\r\n    state = {\r\n      label: ''\r\n    };\r\n\r\n    changeLabel = (e) => {\r\n        this.setState({\r\n            label: e.target.value\r\n        });\r\n    };\r\n\r\n\r\n    editSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.onChangeTask(this.state.label);\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            label, onDeleted,\r\n            onToggleImportant, onToggleDone,\r\n            done, important,\r\n            onEdit, isEdit } = this.props;\r\n\r\n\r\n        let classNames = 'todo-list-item';\r\n        if(done) {\r\n            classNames += ' done';\r\n        }\r\n        if(important) {\r\n            classNames += ' important'\r\n        }\r\n        const isEditBlock = <form onSubmit={ this.editSubmit }>\r\n                                <input type=\"text\"\r\n                                       onChange={ this.changeLabel }\r\n                                        ref='inputChange'\r\n                                />\r\n                            </form>;\r\n        const isLabelBlock = <span className='todo-list-item-label'\r\n                                   onClick={ onToggleDone }>\r\n                                   { label }\r\n                            </span>;\r\n\r\n        return (\r\n            <div className={ classNames }>\r\n                { isEdit ? isEditBlock : isLabelBlock }\r\n            <div className=\"buttons-wrapper\">\r\n                <button type='button'\r\n                        className='btn btn-outline-danger btn-sm'\r\n                        onClick={ onDeleted }>\r\n                <i className='fa fa-trash-o'/>\r\n            </button>\r\n            <button type='button'\r\n                    className='btn btn-outline-success btn-sm'\r\n                    onClick={ onToggleImportant }>\r\n                <i className='fa fa-exclamation'/>\r\n            </button>\r\n            <button\r\n                type='button'\r\n                className='btn btn-outline-info btn-sm'\r\n                onClick={ onEdit }\r\n            >\r\n                <i className='fa fa-edit'/>\r\n            </button>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n","import TodoList from './todo-list';\r\n\r\nexport default TodoList;","import React, { Component } from 'react';\r\nimport TodoListItem from '../todo-list-item';\r\n\r\nimport './todo-list.css';\r\n\r\nexport default class TodoList extends Component {\r\n    render() {\r\n        const { todos, onDeleted,\r\n                onToggleImportant,\r\n                onToggleDone, onEdit, onChangeTask} = this.props;\r\n\r\n        const elements = todos.map((item) => {\r\n            const {id, ...itemProps } = item;\r\n\r\n            return (\r\n                <li key={ id } className='list-group-item'>\r\n                    <TodoListItem\r\n                        { ...itemProps }\r\n                        onDeleted={() => onDeleted(id)}\r\n                        onToggleImportant={() => onToggleImportant(id)}\r\n                        onToggleDone={() => onToggleDone(id)}\r\n                        onEdit={() => onEdit(id)}\r\n                        onChangeTask={(label) => onChangeTask(label, id)}\r\n                    />\r\n                </li>\r\n            )\r\n        });\r\n        return (\r\n            <ul className='list-group todo-list'>\r\n                { elements }\r\n            </ul>\r\n        )\r\n    }\r\n}","import AppHeader from './app-header';\r\n\r\nexport default AppHeader;","import React from 'react';\r\nimport './app-header.css';\r\n\r\nconst AppHeader = ({toDo, done}) => {\r\n    return (\r\n        <div className=\"app-header d-flex\">\r\n            <h1>Todo list</h1>\r\n            <h2>{ toDo } more to do, { done } done</h2>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default AppHeader;","import SearchPanel from './search-panel';\r\n\r\nexport default SearchPanel;","import React, { Component } from 'react';\r\nimport './search-panel.css';\r\n\r\n\r\nexport default class SearchPanel extends Component {\r\n\r\n    state = {\r\n        term: ''\r\n    };\r\n\r\n    onSearchChange = (e) => {\r\n        const term = e.target.value;\r\n        this.setState({ term });\r\n        this.props.onSearchChange(term);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <input type=\"text\"\r\n                   className=\"form-control search-input\"\r\n                   placeholder=\"type to search\"\r\n                   value={ this.state.term }\r\n                   onChange={ this.onSearchChange }\r\n            />\r\n        );\r\n    }\r\n}\r\n","import ItemStatusFilter from './item-status-filter';\r\n\r\nexport default  ItemStatusFilter;","import React, { Component } from 'react';\r\n\r\nexport default class ItemStatusFilter extends Component {\r\n\r\n    buttons = [\r\n        {name: 'all', label: 'All'},\r\n        {name: 'active', label: 'Active'},\r\n        {name: 'done', label: 'Done'}\r\n    ];\r\n\r\n    render() {\r\n        const { filter, onFilterChange } = this.props;\r\n        const buttons = this.buttons.map(({ name, label }) => {\r\n            const isActive = filter === name;\r\n            const clazz = isActive ? 'btn-info' : 'btn-outline-secondary';\r\n            return (\r\n                <button type='button'\r\n                        className={`btn ${ clazz }`}\r\n                        key={ name }\r\n                        onClick={() => onFilterChange(name)}>\r\n                    { label }\r\n                </button>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <div className='btn-group'>\r\n                { buttons }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n","import ItemAddForm from './item-add-form';\r\n\r\nexport default ItemAddForm;","import React, { Component } from 'react';\r\nimport './item-add-form.css';\r\n\r\nexport default class ItemAddForm extends Component {\r\n\r\n    state = {\r\n          label: ''\r\n    };\r\n\r\n    onLabelChange = (e) => {\r\n        this.setState({\r\n            label: e.target.value\r\n        })\r\n    };\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.onItemAdded(this.state.label);\r\n        this.setState({\r\n            label: ''\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"item-add-form d-flex\"\r\n                    onSubmit={ this.onSubmit }>\r\n                <input type=\"text\"\r\n                       className='form-control'\r\n                       onChange={ this.onLabelChange }\r\n                       placeholder='What needs to be done'\r\n                       value={ this.state.label }\r\n                />\r\n                <button type='submit'\r\n                    className='btn btn-outline-secondary'>\r\n                    Add\r\n                </button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\n","import App from './app';\r\n\r\nexport default App;","import React, { Component } from 'react';\r\n\r\nimport TodoList from '../todo-list';\r\nimport AppHeader from '../app-header';\r\nimport SearchPanel from '../search-panel';\r\nimport ItemStatusFilter from '../item-status-filter';\r\nimport ItemAddForm from \"../item-add-form\";\r\n\r\nimport './app.css';\r\n\r\n\r\nexport default class App extends Component {\r\n\r\n    maxId = 100;\r\n\r\n    state = {\r\n        todoData: [\r\n            this.createTodoItem('Drink coffee'),\r\n            this.createTodoItem('Make Awesome App'),\r\n            this.createTodoItem('Have a lunch')\r\n        ],\r\n        term: '',\r\n        filter: 'all',\r\n    };\r\n\r\n    createTodoItem(label) {\r\n        return {\r\n            label,\r\n            important: false,\r\n            done: false,\r\n            isEdit: false,\r\n            id: this.maxId++\r\n        }\r\n    }\r\n\r\n    addItem = (text) => {\r\n        //generate id\r\n        const newItem = this.createTodoItem(text);\r\n        // add element in array\r\n        this.setState(({ todoData }) => {\r\n            if(text !== '') {\r\n                const newArr = [\r\n                    ...todoData,\r\n                    newItem\r\n                ];\r\n\r\n                return {\r\n                    todoData: newArr\r\n                }\r\n            } else {\r\n                return todoData;\r\n            }\r\n        });\r\n    };\r\n\r\n    deleteItem = (id) => {\r\n      this.setState(({ todoData }) => {\r\n          const idx = todoData.findIndex((el) => el.id === id);\r\n\r\n          const newArr = [\r\n              ...todoData.slice(0, idx),\r\n              ...todoData.slice(idx + 1)\r\n          ];\r\n\r\n          return {\r\n              todoData: newArr\r\n          }\r\n      });\r\n    };\r\n\r\n    toggleProperty = (arr, id, propName) => {\r\n        const idx = arr.findIndex((el) => el.id === id);\r\n\r\n        const oldItem = arr[idx];\r\n        const newItem = { ...oldItem, [propName]: !oldItem[propName] };\r\n\r\n        return [\r\n            ...arr.slice(0, idx),\r\n            newItem,\r\n            ...arr.slice(idx + 1)\r\n        ];\r\n    };\r\n\r\n    onToggleDone = (id) => {\r\n        this.setState(({ todoData }) => {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'done')\r\n            }\r\n        });\r\n    };\r\n\r\n    onToggleImportant = (id) => {\r\n        this.setState(({ todoData }) => {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'important')\r\n            }\r\n        });\r\n    };\r\n\r\n    onSearchChange = (term) => {\r\n        this.setState({ term });\r\n    };\r\n    onFilterChange = (filter) => {\r\n        this.setState({ filter });\r\n    };\r\n\r\n    search = (items, term) => {\r\n        if(term.length === 0) {\r\n            return items;\r\n        }\r\n        return items.filter((item) => {\r\n            return item.label\r\n                .toLowerCase()\r\n                .indexOf(term.toLowerCase()) > -1;\r\n        });\r\n    };\r\n\r\n    filter = (items, filter) => {\r\n        switch(filter) {\r\n            case 'all':\r\n                return items;\r\n            case 'active':\r\n                return items.filter((item) => !item.done);\r\n            case 'done':\r\n                return items.filter((item) => item.done);\r\n            default:\r\n                return items;\r\n        }\r\n    };\r\n\r\n    onEdit = (id) => {\r\n        this.setState(({ todoData }) => {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'isEdit')\r\n            }\r\n        });\r\n    };\r\n\r\n    onChangeTask = (text, id) => {\r\n        this.setState(({ todoData }) => {\r\n            const idx = todoData.findIndex((el) => el.id === id);\r\n\r\n            const newItem = this.createTodoItem(text);\r\n\r\n            const newArr = [\r\n                ...todoData.slice(0, idx),\r\n                newItem,\r\n                ...todoData.slice(idx + 1)\r\n            ];\r\n\r\n            return {\r\n                todoData: newArr\r\n            }\r\n\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { todoData, term, filter } = this.state;\r\n\r\n        const visibleItem = this.filter(this.search(todoData, term), filter);\r\n        const doneCount = todoData.filter((el) => el.done).length;\r\n        const todoCount = todoData.length - doneCount;\r\n\r\n        return (\r\n            <div className='container'>\r\n                <div className=\"todo-app\">\r\n                    <AppHeader toDo={ todoCount } done={ doneCount }/>\r\n                    <div className=\"top-panel d-flex\">\r\n                        <SearchPanel onSearchChange={ this.onSearchChange }/>\r\n                        <ItemStatusFilter\r\n                            filter={ filter }\r\n                            onFilterChange={ this.onFilterChange }\r\n                        />\r\n                    </div>\r\n                    <TodoList todos={ visibleItem }\r\n                              onDeleted={ this.deleteItem }\r\n                              onToggleImportant={ this.onToggleImportant }\r\n                              onToggleDone={ this.onToggleDone }\r\n                              onEdit={ this.onEdit }\r\n                              onChangeTask={ this.onChangeTask }\r\n                    />\r\n                    <ItemAddForm onItemAdded={ this.addItem }\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app';\n\nReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}